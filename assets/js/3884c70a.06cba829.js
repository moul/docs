"use strict";(self.webpackChunkosmosis_docs=self.webpackChunkosmosis_docs||[]).push([[8366],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>u});var n=o(67294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(o),u=a,h=d["".concat(s,".").concat(u)]||d[u]||m[u]||i;return o?n.createElement(h,r(r({ref:t},c),{},{components:o})):n.createElement(h,r({ref:t},c))}));function u(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=o.length,r=new Array(i);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var p=2;p<i;p++)r[p]=o[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},67432:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=o(87462),a=(o(67294),o(3905));const i={},r="Create-lbp-pool",l={unversionedId:"modules/gamm/client/docs/create-lbp-pool",id:"modules/gamm/client/docs/create-lbp-pool",title:"Create-lbp-pool",description:"The below is an example of the pool.json file for a [liquidity",source:"@site/docs/osmosis-core/modules/gamm/client/docs/create-lbp-pool.md",sourceDirName:"modules/gamm/client/docs",slug:"/modules/gamm/client/docs/create-lbp-pool",permalink:"/osmosis-core/modules/gamm/client/docs/create-lbp-pool",draft:!1,editUrl:"https://github.com/osmosis-labs/docs/tree/main/docs/osmosis-core/modules/gamm/client/docs/create-lbp-pool.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CLI docs",permalink:"/osmosis-core/modules/gamm/client/docs/"},next:{title:"Create-pool",permalink:"/osmosis-core/modules/gamm/client/docs/create-pool"}},s={},p=[{value:"Example Pool Files",id:"example-pool-files",level:2},{value:"Example CLI tx",id:"example-cli-tx",level:2}],c={toc:p};function m(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"create-lbp-pool"},"Create-lbp-pool"),(0,a.kt)("p",null,"The below is an example of the pool.json file for a ",(0,a.kt)("a",{parentName:"p",href:"https://docs.balancer.finance/guides/crp-tutorial/liquidity-bootstrapping"},"liquidity\nbootstrapping\npool"),"."),(0,a.kt)("p",null,"A liquidity bootstrapping pool's weight begins at the weight set in the\n",(0,a.kt)("inlineCode",{parentName:"p"},"weights")," parameter and linearly shifts the weights until\n",(0,a.kt)("inlineCode",{parentName:"p"},"target-pool-weights")," is reached over a time period set by the\n",(0,a.kt)("inlineCode",{parentName:"p"},"duration")," parameter upon pool creation."),(0,a.kt)("p",null,"Typically, weights begin at an unbalanced ratio with more weight given\nto the token that is to be sold and shifts to a 1:1 weight (or a weight\nfavoring the counterparty token that the pool is aiming to accrue). The\nchanging of the weight affects the exchange price of the tokens even\nwhen the tokens within the pools remain the same. Note that linear\nchange in weight does ",(0,a.kt)("strong",{parentName:"p"},"not")," mean linear change in price (it is highly\nrecommend to play around with the various parameters on this ",(0,a.kt)("a",{parentName:"p",href:"https://docs.google.com/spreadsheets/d/1t6VsMJF8lh4xuH_rfPNdT5DM3nY4orF9KFOj2HdMmuY/edit#gid=1392289526"},"basic LBP\nsimulator"),"\nto make sure you understand how the pool will act with different\nparameters and market demand)."),(0,a.kt)("p",null,"The pool creator can designate when the weight change begins by setting\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"start-time"),". While the pool will be live and available for trade at\nthe initial ",(0,a.kt)("inlineCode",{parentName:"p"},"weights"),", pool weight shift will not begin until\n",(0,a.kt)("inlineCode",{parentName:"p"},"start-time")," is reached."),(0,a.kt)("h2",{id:"example-pool-files"},"Example Pool Files"),(0,a.kt)("p",null,"The following is an example of a liquidity bootstrapping pool. The\nweights linearly change between the initial weights provided, and the\ntarget weights over 72 hrs (3 days) No start time, it defaults to time\nthe tx was successfully executed on chain."),(0,a.kt)("p",null,"pool.json"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-{.json}"},'{\n    "weights": "10akt,1atom",\n    "initial-deposit": "1000akt,100atom",\n    "swap-fee": "0.001",\n    "exit-fee": "0.001",\n    "lbp-params": {\n        "duration": "72h",\n        "target-pool-weights": "1akt,1atom"\n    }\n}\n')),(0,a.kt)("p",null,"Start time included"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-{.json}"},'{\n    "weights": "10akt,1atom",\n    "initial-deposit": "1000akt,100atom",\n    "swap-fee": "0.001",\n    "exit-fee": "0.001",\n    "lbp-params": {\n        "duration": "72h",\n        "target-pool-weights": "1akt,1atom",\n        "start-time": "2006-01-02T15:04:05Z"\n    }\n}\n')),(0,a.kt)("h2",{id:"example-cli-tx"},"Example CLI tx"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},'osmosisd tx gamm create-pool --pool-file="path/to/lbp-pool.json" --from myKey')),(0,a.kt)("p",null,"NOTE: The command to create a liquidity bootstrapping pool is the same\nas creating a normal pool. However, if the pool has valid ",(0,a.kt)("inlineCode",{parentName:"p"},"lbp-params"),"\nin the pool file (json), it will be created as a liquidity bootstrapping\npool."))}m.isMDXComponent=!0}}]);