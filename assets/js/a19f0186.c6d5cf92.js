"use strict";(self.webpackChunkosmosis_docs=self.webpackChunkosmosis_docs||[]).push([[4854],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var i=n.createContext({}),c=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=c(a),d=o,k=u["".concat(i,".").concat(d)]||u[d]||p[d]||r;return a?n.createElement(k,l(l({ref:t},m),{},{components:a})):n.createElement(k,l({ref:t},m))}));function d(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,l=new Array(r);l[0]=u;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var c=2;c<r;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},32352:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=a(87462),o=(a(67294),a(3905));const r={title:"Testing Local Changes",sidebar_position:2},l=void 0,s={unversionedId:"test-local-changes",id:"test-local-changes",title:"Testing Local Changes",description:"Use LocalOsmosis to Test Local Changes",source:"@site/docs/localosmosis/test-local-changes.md",sourceDirName:".",slug:"/test-local-changes",permalink:"/localosmosis/test-local-changes",draft:!1,editUrl:"https://github.com/osmosis-labs/docs/tree/main/docs/localosmosis/test-local-changes.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Testing Local Changes",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"LocalOsmosis",permalink:"/localosmosis/"},next:{title:"Run LocalOsmosis with mainnet state",permalink:"/localosmosis/local-osmosis-mainstate"}},i={},c=[{value:"Use LocalOsmosis to Test Local Changes",id:"use-localosmosis-to-test-local-changes",level:2}],m={toc:c};function p(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"use-localosmosis-to-test-local-changes"},"Use LocalOsmosis to Test Local Changes"),(0,o.kt)("p",null,"You can now quickly test your changes to Osmosis with just a few commands:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Make any change to the osmosis code that you want to test")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"From the Osmosis home folder, run ",(0,o.kt)("inlineCode",{parentName:"p"},"make localnet-build")),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"This compiles all your changes to docker image called local:osmosis (~60 seconds)"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Once complete, run ",(0,o.kt)("inlineCode",{parentName:"p"},"make localnet-start")),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"You will now be running a local network with your changes!"),(0,o.kt)("li",{parentName:"ul"},"The files in ",(0,o.kt)("inlineCode",{parentName:"li"},"tests/e2e/localosmosis/.osmosisd")," that are produced\nby this command can only be removed by running ",(0,o.kt)("inlineCode",{parentName:"li"},"make localnet-remove")),(0,o.kt)("li",{parentName:"ul"},"That will reset the chain to genesis"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"To add your validator wallet and 9 other preloaded wallets automatically, run ",(0,o.kt)("inlineCode",{parentName:"p"},"make localnet-keys")),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"These keys are added to your --keyring-backend test"),(0,o.kt)("li",{parentName:"ul"},'If the keys are already on your keyring, you will get an "Error: aborted"'),(0,o.kt)("li",{parentName:"ul"},"Ensure you use the name of the account as listed in the table below, as well as ensure you append the ",(0,o.kt)("inlineCode",{parentName:"li"},"--keyring-backend test")," to your txs",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Example: ",(0,o.kt)("inlineCode",{parentName:"li"},"osmosisd tx bank send lo-test2 osmo1cyyzpxplxdzkeea7kwsydadg87357qnahakaks --keyring-backend test --chain-id localosmosis")))))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"To remove all block history and start from scratch, run ",(0,o.kt)("inlineCode",{parentName:"p"},"make localnet-remove"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"To stop the chain but keep the state, run ",(0,o.kt)("inlineCode",{parentName:"p"},"make localnet-stop")))))}p.isMDXComponent=!0}}]);